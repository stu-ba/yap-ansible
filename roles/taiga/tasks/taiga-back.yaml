---

- name: create folders
  become: yes
  file:
    name: "/home/{{ taiga_user }}/{{ item }}"
    state: directory
    owner: "{{ taiga_user }}"
    group: "{{ taiga_group }}"
  with_items:
    - logs
    - conf

- name: download the code from GitHub
  become: yes
  become_user: "{{ taiga_user }}"
  git:
    repo: "{{ taiga_back_repo }}"
    version: yap-stable
    dest: "{{ taiga_folder_back }}"

- name: copy taiga-back settings (local.py)
  become: yes
  become_user: "{{ taiga_user }}"
  template:
    src: "{{ role_path }}/templates/back/settings/local.py.j2"
    dest: "{{ taiga_folder_back }}/settings/local.py"
  notify:
    - restart taiga-service
    - restart circus

- name: change owner of taiga-back
  become: yes
  file:
    path: "{{ taiga_folder_back }}"
    state: directory
    recurse: yes
    owner: "{{ taiga_user }}"
    group: "{{ taiga_group }}"

- name: upgrade pip and setuptools to latest
  become: yes
  become_user: "{{ taiga_user }}"
  pip:
    virtualenv: "{{ taiga_venv }}"
    virtualenv_python: python3.4
    name: "{{ item }}"
    state: latest
  with_items: 
    - setuptools
    - pip

- name: install requirements in virtualenv
  become: yes
  become_user: "{{ taiga_user }}"
  pip: 
    virtualenv: "{{ taiga_venv }}"
    virtualenv_python: python3.4
    requirements: "{{ taiga_folder_back }}/requirements.txt"

- name: install bcrypt in virtualenv
  become: yes
  become_user: "{{ taiga_user }}"
  pip: 
    virtualenv: "{{ taiga_venv }}"
    virtualenv_python: python3.4
    name: bcrypt

- name: run migrations
  become: yes
  become_user: "{{ taiga_user }}"
  django_manage:
    app_path: "{{ taiga_folder_back }}"
    command: migrate
    virtualenv: "{{ taiga_venv }}"
  register: migrations

- name: load initial data
  become: yes
  become_user: "{{ taiga_user }}"
  django_manage:
    app_path: "{{ taiga_folder_back }}"
    command: loaddata
    fixtures: "{{ item }}"
    virtualenv: "{{ taiga_venv }}"
  with_items: 
    - initial_user
    - initial_project_templates
  when: migrations.changed

- name: run compile messages
  become: yes
  become_user: "{{ taiga_user }}"
  django_manage:
    app_path: "{{ taiga_folder_back }}"
    command: compilemessages
    virtualenv: "{{ taiga_venv }}"

- name: run taiga collectstatic
  become: yes
  become_user: "{{ taiga_user }}"
  django_manage:
    app_path: "{{ taiga_folder_back }}"
    command: collectstatic
    virtualenv: "{{ taiga_venv }}"